/*
 * MoneyMinder - Rest api
 * Api for MoneyMinder project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateItemRequestBody;
import org.openapitools.client.model.GetAllItemsFromSpecificList200Response;
import org.openapitools.client.model.Item;
import org.openapitools.client.model.ItemRequestBody;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ItemsApi
 */
@Disabled
public class ItemsApiTest {

    private final ItemsApi api = new ItemsApi();

    /**
     * Add new item to specific list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewItemToSpecificListTest() throws ApiException {
        Integer listId = null;
        CreateItemRequestBody createItemRequestBody = null;
        Item response = api.addNewItemToSpecificList(listId, createItemRequestBody);
        // TODO: test validations
    }

    /**
     * Delete specific item from specific list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSpecificItemFromSpecificListTest() throws ApiException {
        Integer listId = null;
        Integer itemId = null;
        api.deleteSpecificItemFromSpecificList(listId, itemId);
        // TODO: test validations
    }

    /**
     * Return all items from specific list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllItemsFromSpecificListTest() throws ApiException {
        Integer listId = null;
        GetAllItemsFromSpecificList200Response response = api.getAllItemsFromSpecificList(listId);
        // TODO: test validations
    }

    /**
     * Mark item as purchased
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void markItemAsPurchasedTest() throws ApiException {
        Integer listId = null;
        Integer itemId = null;
        api.markItemAsPurchased(listId, itemId);
        // TODO: test validations
    }

    /**
     * Return specific item from specific list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void returnSpecificItemFromSpecificListTest() throws ApiException {
        Integer listId = null;
        Integer itemId = null;
        Item response = api.returnSpecificItemFromSpecificList(listId, itemId);
        // TODO: test validations
    }

    /**
     * Update specific item from specific list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSpecificItemFromSpecificListTest() throws ApiException {
        Integer listId = null;
        Integer itemId = null;
        ItemRequestBody itemRequestBody = null;
        Item response = api.updateSpecificItemFromSpecificList(listId, itemId, itemRequestBody);
        // TODO: test validations
    }

}
